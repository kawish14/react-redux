{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { DISHES } from '../shared/dishes';\nimport { baseUrl } from '../shared/baseUrl';\nexport var addComment = function addComment(dishId, rating, author, comment) {\n  return {\n    type: ActionTypes.ADD_COMMENT,\n    payload: {\n      dishId: dishId,\n      rating: rating,\n      author: author,\n      comment: comment\n    }\n  };\n};\nexport var fetchDishes = function fetchDishes() {\n  return function (dispatch) {\n    dispatch(dishesLoading(true));\n    return fetch(baseUrl + 'dishes').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error' + response.status + ':' + response.statusText);\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (dishes) {\n      return dispatch(addDishes(dishes));\n    });\n  };\n};\nexport var dishesLoading = function dishesLoading() {\n  return {\n    type: ActionTypes.DISHES_LOADING\n  };\n};\nexport var dishesFailed = function dishesFailed(errmess) {\n  return {\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n  };\n};\nexport var addDishes = function addDishes(dishes) {\n  return {\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n  };\n};\nexport var fetchComments = function fetchComments() {\n  return function (dispatch) {\n    return fetch(baseUrl + 'comments').then(function (response) {\n      return response.json();\n    }).then(function (comments) {\n      return dispatch(addComments(comments));\n    });\n  };\n};\nexport var commentsFailed = function commentsFailed(errmess) {\n  return {\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n  };\n};\nexport var addComments = function addComments(comments) {\n  return {\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n  };\n};\nexport var fetchPromos = function fetchPromos() {\n  return function (dispatch) {\n    dispatch(promosLoading());\n    return fetch(baseUrl + 'promotions').then(function (response) {\n      return response.json();\n    }).then(function (promos) {\n      return dispatch(addPromos(promos));\n    });\n  };\n};\nexport var promosLoading = function promosLoading() {\n  return {\n    type: ActionTypes.PROMOS_LOADING\n  };\n};\nexport var promosFailed = function promosFailed(errmess) {\n  return {\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n  };\n};\nexport var addPromos = function addPromos(promos) {\n  return {\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n  };\n};","map":{"version":3,"sources":["G:/courseara/2-Frontend Web Development with React/catering/src/redux/ActionCreators.js"],"names":["ActionTypes","DISHES","baseUrl","addComment","dishId","rating","author","comment","type","ADD_COMMENT","payload","fetchDishes","dispatch","dishesLoading","fetch","then","response","ok","error","Error","status","statusText","json","dishes","addDishes","DISHES_LOADING","dishesFailed","errmess","DISHES_FAILED","ADD_DISHES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","PROMOS_LOADING","promosFailed","PROMOS_FAILED","ADD_PROMOS"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\nimport { DISHES } from '../shared/dishes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (dishId, rating, author, comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n});\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if(response.ok){\r\n            return response\r\n        }\r\n        else{\r\n            var error = new Error('Error' + response.status + ':' + response.statusText)\r\n        }\r\n    })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)));\r\n    \r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});"]},"metadata":{},"sourceType":"module"}