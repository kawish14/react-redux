{"ast":null,"code":"import _classCallCheck from \"G:\\\\courseara\\\\2-Frontend Web Development with React\\\\catering\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\courseara\\\\2-Frontend Web Development with React\\\\catering\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\courseara\\\\2-Frontend Web Development with React\\\\catering\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\courseara\\\\2-Frontend Web Development with React\\\\catering\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\courseara\\\\2-Frontend Web Development with React\\\\catering\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"G:\\\\courseara\\\\2-Frontend Web Development with React\\\\catering\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"G:\\\\courseara\\\\2-Frontend Web Development with React\\\\catering\\\\src\\\\components\\\\CommentForm.js\";\nimport React from 'react';\nimport { Button, Modal, ModalBody, ModalHeader, Row, Label, Col, Form, FormGroup, Input } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nvar CommentForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CommentForm, _React$Component);\n\n  function CommentForm(props) {\n    var _this;\n\n    _classCallCheck(this, CommentForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentForm).call(this, props));\n    _this.state = {\n      isModalOpen: false\n    };\n    _this.toggleModal = _this.toggleModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CommentForm, [{\n    key: \"toggleModal\",\n    value: function toggleModal() {\n      this.setState({\n        isModalOpen: !this.state.isModalOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.toggleModal,\n        color: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fas fa-pen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), \" Submit Comment\"), React.createElement(Modal, {\n        isOpen: this.state.isModalOpen,\n        toggle: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Submit Comment\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"rating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Rating\"), React.createElement(Input, {\n        type: \"number\",\n        id: \"rating\",\n        name: \"rating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Your Name\"), React.createElement(Input, {\n        type: \"text\",\n        id: \"author\",\n        name: \"author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"textarea\",\n        name: \"comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Comment\"))), React.createElement(Button, {\n        type: \"submit\",\n        value: \"submit\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Login\")))));\n    }\n  }]);\n\n  return CommentForm;\n}(React.Component);\n\nexport default CommentForm;","map":{"version":3,"sources":["G:/courseara/2-Frontend Web Development with React/catering/src/components/CommentForm.js"],"names":["React","Button","Modal","ModalBody","ModalHeader","Row","Label","Col","Form","FormGroup","Input","Control","LocalForm","Errors","CommentForm","props","state","isModalOpen","toggleModal","bind","setState","handleLogin","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAeC,KAAf,EAAsBC,SAAtB,EAAgCC,WAAhC,EAA4CC,GAA5C,EAAgDC,KAAhD,EAAsDC,GAAtD,EAA0DC,IAA1D,EAA+DC,SAA/D,EAAyEC,KAAzE,QAAsF,YAAtF;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,MAA7B,QAA2C,kBAA3C;;IAEMC,W;;;;;AACN,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE;AADJ,KAAb;AAIA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AAPe;AASd;;;;kCAEe;AACZ,WAAKC,QAAL,CAAc;AACZH,QAAAA,WAAW,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADb,OAAd;AAGD;;;6BAGK;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKC,WAAtB;AAAmC,QAAA,KAAK,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiD;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjD,oBADJ,EAuCI,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC,WAA1B;AAAuC,QAAA,MAAM,EAAE,KAAKC,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKG,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,EAAE,EAAC,QAAxB;AAAiC,QAAA,IAAI,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAKI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,QAAtB;AAA+B,QAAA,IAAI,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CALJ,EASI,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,CATJ,EAcI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,QAA5B;AAAqC,QAAA,KAAK,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAdJ,CADJ,CAFJ,CAvCJ,CADJ;AA+DH;;;;EAnFqBrB,KAAK,CAACsB,S;;AAsFhC,eAAeR,WAAf","sourcesContent":["import React from 'react';\r\nimport {Button,Modal, ModalBody,ModalHeader,Row,Label,Col,Form,FormGroup,Input } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nclass CommentForm extends React.Component{\r\nconstructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        isModalOpen: false\r\n        };\r\n\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    \r\n    }\r\n\r\n      toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Button onClick={this.toggleModal} color=\"light\"><span className=\"fas fa-pen\"></span> Submit Comment</Button>\r\n               {/*  <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm >\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\">Rating</Label>\r\n                                <Col md={10}>\r\n                                    <Control.number model=\".rating\" id=\"rating\" name=\"rating\"\r\n                                        placeholder=\"Rating\"\r\n                                        className=\"form-control\"\r\n                                     \r\n                                         />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"username\">Your Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                     \r\n                                         />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"username\">Comment</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        className=\"form-control\"\r\n                                  \r\n                                         />\r\n                                </Col>\r\n                            </Row>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal> */}\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"rating\">Rating</Label>\r\n                                <Input type=\"number\" id=\"rating\" name=\"rating\" />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"author\">Your Name</Label>\r\n                                <Input type=\"text\" id=\"author\" name=\"author\" />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"textarea\" name=\"comment\">Comment</Input>\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default CommentForm"]},"metadata":{},"sourceType":"module"}