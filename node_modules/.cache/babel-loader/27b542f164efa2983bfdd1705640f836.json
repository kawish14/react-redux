{"ast":null,"code":"import _classCallCheck from \"G:\\\\courseara\\\\2-Frontend Web Development with React\\\\catering\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\courseara\\\\2-Frontend Web Development with React\\\\catering\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\courseara\\\\2-Frontend Web Development with React\\\\catering\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\courseara\\\\2-Frontend Web Development with React\\\\catering\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\courseara\\\\2-Frontend Web Development with React\\\\catering\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"G:\\\\courseara\\\\2-Frontend Web Development with React\\\\catering\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"G:\\\\courseara\\\\2-Frontend Web Development with React\\\\catering\\\\src\\\\components\\\\CommentForm.js\";\nimport React from 'react';\nimport { Button, Modal, ModalBody, ModalHeader, Row, Label, Col, Form, FormGroup, Input } from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nvar required = function required(val) {\n  return val && val.length;\n};\n\nvar maxLength = function maxLength(len) {\n  return function (val) {\n    return !val || val.length <= len;\n  };\n};\n\nvar minLength = function minLength(len) {\n  return function (val) {\n    return val && val.length >= len;\n  };\n};\n\nvar CommentForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CommentForm, _React$Component);\n\n  function CommentForm(props) {\n    var _this;\n\n    _classCallCheck(this, CommentForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentForm).call(this, props));\n    _this.state = {\n      isModalOpen: false\n    };\n    _this.toggleModal = _this.toggleModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CommentForm, [{\n    key: \"toggleModal\",\n    value: function toggleModal() {\n      this.setState({\n        isModalOpen: !this.state.isModalOpen\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      this.setState({\n        isModalOpen: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.toggleModal,\n        color: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fas fa-pen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), \" Submit Comment\"), React.createElement(Modal, {\n        isOpen: this.state.isModalOpen,\n        toggle: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Submit Comment\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(LocalForm, {\n        onSubmit: function onSubmit() {\n          return _this2.handleSubmit();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"rating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Rating\"), React.createElement(Control.input, {\n        type: \"number\",\n        model: \".rating\",\n        id: \"rating\",\n        name: \"rating\",\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(Errors, {\n        className: \"text-danger\",\n        model: \".rating\",\n        show: \"touched\",\n        messages: {\n          required: 'Required',\n          minLength: 'Must be greater than 3 characters',\n          maxLength: 'Must be 15 characters or less'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Your Name\"), React.createElement(Control.text, {\n        model: \".author\",\n        id: \"author\",\n        name: \"author\",\n        placeholder: \"Your Name\",\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Comment\"), React.createElement(Control.textarea, {\n        model: \".firstname\",\n        id: \"firstname\",\n        name: \"firstname\",\n        className: \"form-control\",\n        rows: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: {\n          size: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Submit\")))))));\n    }\n  }]);\n\n  return CommentForm;\n}(React.Component);\n\nexport default CommentForm;","map":{"version":3,"sources":["G:/courseara/2-Frontend Web Development with React/catering/src/components/CommentForm.js"],"names":["React","Button","Modal","ModalBody","ModalHeader","Row","Label","Col","Form","FormGroup","Input","Control","LocalForm","Errors","required","val","length","maxLength","len","minLength","CommentForm","props","state","isModalOpen","toggleModal","bind","setState","handleSubmit","size","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAeC,KAAf,EAAsBC,SAAtB,EAAgCC,WAAhC,EAA4CC,GAA5C,EAAgDC,KAAhD,EAAsDC,GAAtD,EAA0DC,IAA1D,EAA+DC,SAA/D,EAAyEC,KAAzE,QAAsF,YAAtF;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,MAA7B,QAA2C,kBAA3C;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD;AAAA,SAASA,GAAG,IAAIA,GAAG,CAACC,MAApB;AAAA,CAAjB;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD;AAAA,SAAS,UAACH,GAAD;AAAA,WAAS,CAAEA,GAAF,IAAWA,GAAG,CAACC,MAAJ,IAAcE,GAAlC;AAAA,GAAT;AAAA,CAAlB;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACD,GAAD;AAAA,SAAS,UAACH,GAAD;AAAA,WAASA,GAAG,IAAKA,GAAG,CAACC,MAAJ,IAAcE,GAA/B;AAAA,GAAT;AAAA,CAAlB;;IAEME,W;;;;;AACN,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE;AADJ,KAAb;AAIA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AAPe;AASd;;;;kCAEe;AACZ,WAAKC,QAAL,CAAc;AACZH,QAAAA,WAAW,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADb,OAAd;AAGD;;;mCACa;AACZ,WAAKG,QAAL,CAAc;AACVH,QAAAA,WAAW,EAAE;AADH,OAAd;AAGD;;;6BAEK;AAAA;;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKC,WAAtB;AAAmC,QAAA,KAAK,EAAC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiD;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjD,oBADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC,WAA1B;AAAuC,QAAA,MAAM,EAAE,KAAKC,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAE,KAAKA,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAE;AAAA,iBAAM,MAAI,CAACG,YAAL,EAAN;AAAA,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,OAAD,CAAS,KAAT;AAAe,QAAA,IAAI,EAAC,QAApB;AAA6B,QAAA,KAAK,EAAC,SAAnC;AAA6C,QAAA,EAAE,EAAC,QAAhD;AAAyD,QAAA,IAAI,EAAC,QAA9D;AACI,QAAA,SAAS,EAAC,cADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAKI,oBAAC,MAAD;AACI,QAAA,SAAS,EAAC,aADd;AAEI,QAAA,KAAK,EAAC,SAFV;AAGI,QAAA,IAAI,EAAC,SAHT;AAII,QAAA,QAAQ,EAAE;AACNb,UAAAA,QAAQ,EAAE,UADJ;AAENK,UAAAA,SAAS,EAAE,mCAFL;AAGNF,UAAAA,SAAS,EAAE;AAHL,SAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADJ,CADJ,EAmBI,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,OAAD,CAAS,IAAT;AAAc,QAAA,KAAK,EAAC,SAApB;AAA8B,QAAA,EAAE,EAAC,QAAjC;AAA0C,QAAA,IAAI,EAAC,QAA/C;AACI,QAAA,WAAW,EAAC,WADhB;AAEI,QAAA,SAAS,EAAC,cAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,CAnBJ,EA6BI,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,oBAAC,OAAD,CAAS,QAAT;AAAkB,QAAA,KAAK,EAAC,YAAxB;AAAqC,QAAA,EAAE,EAAC,WAAxC;AAAoD,QAAA,IAAI,EAAC,WAAzD;AACI,QAAA,SAAS,EAAC,cADd;AAEI,QAAA,IAAI,EAAC,GAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,CA7BJ,EAuCI,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAACW,UAAAA,IAAI,EAAC;AAAN,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,KAAK,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,CAvCJ,CADJ,CAFJ,CAFJ,CADJ;AAuDH;;;;EA/EqB5B,KAAK,CAAC6B,S;;AAkFhC,eAAeT,WAAf","sourcesContent":["import React from 'react';\r\nimport {Button,Modal, ModalBody,ModalHeader,Row,Label,Col,Form,FormGroup,Input } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends React.Component{\r\nconstructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        isModalOpen: false\r\n        };\r\n\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    \r\n    }\r\n\r\n      toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n      handleSubmit(){\r\n        this.setState({\r\n            isModalOpen: false\r\n          });\r\n      }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Button onClick={this.toggleModal} color=\"light\"><span className=\"fas fa-pen\"></span> Submit Comment</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={() => this.handleSubmit()}>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={12}>\r\n                                    <Label htmlFor=\"rating\">Rating</Label>\r\n                                    <Control.input type=\"number\" model=\".rating\" id=\"rating\" name=\"rating\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".rating\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 3 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={12}>\r\n                                    <Label htmlFor=\"author\">Your Name</Label>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                      \r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={12}>\r\n                                    <Label htmlFor=\"author\">Comment</Label>\r\n                                    <Control.textarea model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        className=\"form-control\"\r\n                                        rows=\"6\"\r\n                                     \r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10}}>\r\n                                    <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default CommentForm"]},"metadata":{},"sourceType":"module"}