{"ast":null,"code":"var _jsxFileName = \"G:\\\\courseara\\\\2-Frontend Web Development with React\\\\catering\\\\src\\\\components\\\\MenuComponent.js\";\nimport React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, Breadcrumb, BreadcrumbItem, CardTitle } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nfunction RenderMenuItem(_ref) {\n  var dish = _ref.dish,\n      onClick = _ref.onClick;\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/menu/\".concat(dish.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(CardImg, {\n    width: \"100%\",\n    src: baseUrl + dish.image,\n    alt: dish.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(CardImgOverlay, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(CardTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, dish.name))));\n} // Another way to use functional component\n\n\nvar Menu = function Menu(props) {\n  var menu = props.dishes.dishes.map(function (dish) {\n    if (props.dishes.isLoading) {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })));\n    } else if (props.dishes.errMess) {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, props.dishes.errMess))));\n    } else return React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(RenderMenuItem, {\n      dish: dish,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  });\n  console.log(\"Menu Component render is invoke\");\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Breadcrumb, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(BreadcrumbItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Home\")), React.createElement(BreadcrumbItem, {\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Menu\")), React.createElement(\"div\", {\n    className: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Menu\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, menu));\n};\n\nexport default Menu;","map":{"version":3,"sources":["G:/courseara/2-Frontend Web Development with React/catering/src/components/MenuComponent.js"],"names":["React","Card","CardImg","CardImgOverlay","CardText","CardBody","Breadcrumb","BreadcrumbItem","CardTitle","Link","Loading","baseUrl","RenderMenuItem","dish","onClick","id","image","name","Menu","props","menu","dishes","map","isLoading","errMess","console","log"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody,Breadcrumb, BreadcrumbItem,\r\nCardTitle } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem ({dish, onClick}) {\r\n  return (\r\n      <Card>\r\n          <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n              <CardImgOverlay>\r\n                  <CardTitle>{dish.name}</CardTitle>\r\n              </CardImgOverlay>\r\n          </Link>\r\n      </Card>\r\n  );\r\n}\r\n\r\n  // Another way to use functional component\r\n  const Menu = (props) => {\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n      if (props.dishes.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\"> \r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n      return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n          <RenderMenuItem dish={dish}  />\r\n        </div>\r\n      );\r\n  });\r\n    console.log(\"Menu Component render is invoke\")\r\n    return (\r\n      <div className=\"container\">\r\n          <div className=\"row\">\r\n              <Breadcrumb>\r\n                  <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                  <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n              </Breadcrumb>\r\n              <div className=\"col-12\">\r\n                  <h3>Menu</h3>\r\n                  <hr />\r\n              </div>                \r\n          </div>\r\n          <div className=\"row\">\r\n              {menu}\r\n          </div>\r\n      </div>\r\n  );\r\n  }\r\n  \r\nexport default Menu;"]},"metadata":{},"sourceType":"module"}