{"ast":null,"code":"import _defineProperty from \"G:\\\\courseara\\\\2-Frontend Web Development with React\\\\catering\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"G:\\\\courseara\\\\2-Frontend Web Development with React\\\\catering\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"G:\\\\courseara\\\\2-Frontend Web Development with React\\\\catering\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\courseara\\\\2-Frontend Web Development with React\\\\catering\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\courseara\\\\2-Frontend Web Development with React\\\\catering\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\courseara\\\\2-Frontend Web Development with React\\\\catering\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\courseara\\\\2-Frontend Web Development with React\\\\catering\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"G:\\\\courseara\\\\2-Frontend Web Development with React\\\\catering\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"G:\\\\courseara\\\\2-Frontend Web Development with React\\\\catering\\\\src\\\\components\\\\ContactComponent.js\";\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, Row, FormFeedback } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nvar Contact =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Contact, _React$Component);\n\n  function Contact(props) {\n    var _this;\n\n    _classCallCheck(this, Contact);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Contact).call(this, props));\n\n    _this.handleBlur = function (field) {\n      return function (evt) {\n        _this.setState({\n          touched: _objectSpread({}, _this.state.touched, _defineProperty({}, field, true))\n        });\n      };\n    };\n\n    _this.state = {\n      firstname: '',\n      lastname: '',\n      telnum: '',\n      email: '',\n      agree: false,\n      contactType: 'Tel.',\n      message: '',\n      touched: {\n        firstname: false,\n        lastname: false,\n        telnum: false,\n        email: false\n      }\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBlur = _this.handleBlur.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Contact, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      console.log('Current State is: ' + JSON.stringify(this.state));\n      alert('Current State is: ' + JSON.stringify(this.state));\n      event.preventDefault();\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(firstname, lastname, telnum, email) {\n      var errors = {\n        firstname: '',\n        lastname: '',\n        telnum: '',\n        email: ''\n      };\n      if (this.state.touched.firstname && firstname.length < 3) errors.firstname = 'First Name should be >= 3 characters';else if (this.state.touched.firstname && firstname.length > 10) errors.firstname = 'First Name should be <= 10 characters';\n      if (this.state.touched.lastname && lastname.length < 3) errors.lastname = 'Last Name should be >= 3 characters';else if (this.state.touched.lastname && lastname.length > 10) errors.lastname = 'Last Name should be <= 10 characters';\n      var reg = /^\\d+$/;\n      if (this.state.touched.telnum && !reg.test(telnum)) errors.telnum = 'Tel. Number should contain only numbers';\n      if (this.state.touched.email && email.split('').filter(function (x) {\n        return x === '@';\n      }).length !== 1) errors.email = 'Email should contain a @';\n      return errors;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Breadcrumb, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(BreadcrumbItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Home\")), React.createElement(BreadcrumbItem, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Contact Us\")), React.createElement(\"div\", {\n        className: \"col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Contact Us\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row row-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Send us your Feedback\")), React.createElement(\"div\", {\n        className: \"col-12 col-md-9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"firstname\",\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(Col, {\n        md: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        id: \"firstname\",\n        name: \"firstname\",\n        placeholder: \"First Name\",\n        value: this.state.firstname,\n        valid: errors.firstname === '',\n        invalid: errors.firstname !== '',\n        onBlur: this.handleBlur('firstname'),\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, errors.firstname))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"lastname\",\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(Col, {\n        md: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        id: \"lastname\",\n        name: \"lastname\",\n        placeholder: \"Last Name\",\n        value: this.state.lastname,\n        valid: errors.lastname === '',\n        invalid: errors.lastname !== '',\n        onBlur: this.handleBlur('lastname'),\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, errors.lastname))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"telnum\",\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Contact Tel.\"), React.createElement(Col, {\n        md: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"tel\",\n        id: \"telnum\",\n        name: \"telnum\",\n        placeholder: \"Tel. Number\",\n        value: this.state.telnum,\n        valid: errors.telnum === '',\n        invalid: errors.telnum !== '',\n        onBlur: this.handleBlur('telnum'),\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, errors.telnum))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"email\",\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Col, {\n        md: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: this.state.email,\n        valid: errors.email === '',\n        invalid: errors.email !== '',\n        onBlur: this.handleBlur('email'),\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(FormFeedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, errors.email)))))));\n    }\n  }]);\n\n  return Contact;\n}(React.Component);\n\nexport default Contact;","map":{"version":3,"sources":["G:/courseara/2-Frontend Web Development with React/catering/src/components/ContactComponent.js"],"names":["React","Breadcrumb","BreadcrumbItem","Button","Form","FormGroup","Label","Input","Col","Row","FormFeedback","Link","Contact","props","handleBlur","field","evt","setState","touched","state","firstname","lastname","telnum","email","agree","contactType","message","handleSubmit","bind","handleInputChange","event","target","value","type","checked","name","console","log","JSON","stringify","alert","preventDefault","errors","length","reg","test","split","filter","x","validate","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, Row, FormFeedback } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'Tel.',\r\n            message: '',\r\n            touched: {\r\n                firstname: false,\r\n                lastname: false,\r\n                telnum: false,\r\n                email: false\r\n            }\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n        \r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        \r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        console.log('Current State is: ' + JSON.stringify(this.state));\r\n        alert('Current State is: ' + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true }\r\n        });\r\n    }\r\n\r\n    validate(firstname, lastname, telnum, email) {\r\n        const errors = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: ''\r\n        };\r\n\r\n        if (this.state.touched.firstname && firstname.length < 3)\r\n            errors.firstname = 'First Name should be >= 3 characters';\r\n        else if (this.state.touched.firstname && firstname.length > 10)\r\n            errors.firstname = 'First Name should be <= 10 characters';\r\n\r\n        if (this.state.touched.lastname && lastname.length < 3)\r\n            errors.lastname = 'Last Name should be >= 3 characters';\r\n        else if (this.state.touched.lastname && lastname.length > 10)\r\n            errors.lastname = 'Last Name should be <= 10 characters';\r\n\r\n        const reg = /^\\d+$/;\r\n        if (this.state.touched.telnum && !reg.test(telnum))\r\n            errors.telnum = 'Tel. Number should contain only numbers';\r\n\r\n        if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n            errors.email = 'Email should contain a @';\r\n\r\n        return errors;\r\n    }\r\n\r\n    render(){\r\n        const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                        <FormGroup row>\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        value={this.state.firstname}\r\n                                        valid={errors.firstname === ''}\r\n                                        invalid={errors.firstname !== ''}\r\n                                        onBlur={this.handleBlur('firstname')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.firstname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        value={this.state.lastname}\r\n                                        valid={errors.lastname === ''}\r\n                                        invalid={errors.lastname !== ''}\r\n                                        onBlur={this.handleBlur('lastname')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.lastname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"tel\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        value={this.state.telnum}\r\n                                        valid={errors.telnum === ''}\r\n                                        invalid={errors.telnum !== ''}\r\n                                        onBlur={this.handleBlur('telnum')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.telnum}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        value={this.state.email}\r\n                                        valid={errors.email === ''}\r\n                                        invalid={errors.email !== ''}\r\n                                        onBlur={this.handleBlur('email')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.email}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n   \r\n\r\n\r\nexport default Contact;"]},"metadata":{},"sourceType":"module"}